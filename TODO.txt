* Fix dragging from BPlainTextEdit. Note: not sure if needed
* Add comments to the code and make docs; write detailed user manual
* Improve MacOS support
* Fix code editor document modification on setText
* Implement multi-cursor in code editor
* Implement code folding in code editor
* Add function for unzipping Hunspell dictionaries
* Sort includes, class members, etc.
* Use Qt coding style

=== PATCH ===

* Implement single quote support for BTextTools::splitCommand function

=== MINOR ===

* Add function for removing old plugin settings
* Add processor architecture enum
* Add ability to remember entered commands in BTerminalIOHandler
* Add ability to set auto-indentation in code editor
* Add overloaded BCoreApplication::installTranslator method
* Add method for setting terminal window size to BTerminalIOHandler
[done] Add template methods for secure casting int and QVariant to enum (enum_cast)

=== MAJOR ===

[done] Add BVersion::clear method
[done] Fix BVersion: rename "minor", "major", etc.
* Fix BeQt::OSType enum values
* Merge similar GUI method pairs into templates
[done] Remove BeQt::variantToData and BeQt::dataToVatiant functions
* Use BUuid class instead of QUuid
* Reimplement BCoreApplication, BApplication, and resource lookup system
* Move some methods to separate namespaces
* Implement locking of global object instances
* Add ability to listen on several ports/hosts to BNetworkServer
* Improve BTextBlockUserData (implement multiple skip intervals)
* Improve BLocaleComboBox (implement custom mode)
* Implement native settings dialogs
[done] Remove BGuiPluginInterface::handleSettings method
[done] Remove old methods from BPluginsSettingsTab
* Implement Katepart-compatible file type definition using XML files
* Improve code editor search (use regular expressions)
* Add position to point conversion method to BAbstractCodeEditorDocument
* Add pure position retrieving method to BAbstractCodeEditorDocument
* Add overloaded moveCursor method to BAbstractCodeEditorDocument
* Implement autocompletion
* Improve document-wide and selection-wide replacing
* Add methods to navigate through BAbstractCodeEditorDocument
* Fix insertion of spaces and tabulations in code editor documents
* Improve plugin loading system
* Add BGuiPluginWrapper class
* Add ability to add extra locations and to restrict locations
* Improve BLineNumberWidget: add virtual functions
* Add PDCurses binding
[done] Add ability to set compression for every network operation independently
* Add public function for handling events to BAbstractCodeEditorDocument
[done] Add version information to plugins
* Show plugin version information
[done] Add Help information to plugin info
* Show plugin Help
[done] Rename PluginInfoStatic into StaticPluginInfo
[done] Rename BGuiPluginInterface settingsTab method into createSettingsTab
* Add ability to set user About dialog for plugins
* Add BAbstractCodeEditorDocument::clear method
* Add ability to set multiple copyright owners
* Disable changing parent editor of code editor modules (not sure)
[done] Fix BPluginsSettingsTab About dialog version
[done] Overload BAboutDuialog::setAppVersion method
[done] Rename BPluginWrapper::interfacetestFunction into interfaceTestFunction
* Move setBlockComment method from BCodeEdit
[done] Add working directory argument to BeQt::startProcessDetached function
[done] Add .pri files for 3rdparty libraries (Hunspell and Enca)
[done] Add BApplicationBase class
[done] Add InitialSettings class to BApplicationBase
[done] Make BCoreApplication and BApplication inherit QCoreApplication and QApplication
* Make BTerminalIOHandler a singleton
* Implement terminal modes (standard mode and PDCurses mode)
[done] Rename BTerminalIOHandler into BTerminal
[done] Move splitCommand and mergeArguments methods from BTerminalIOHandler to BTextTools
[done] Add alternative base class pair with non-QObject private base
* Make BPersonInfo and BPersonInfoList serializable
* Make data classes serializable
* Use enum_cast wherever it makes sense
